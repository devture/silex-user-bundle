{% extends layout %}

{% block content %}
	<form name="user-login" id="user-login" class="form-horizontal text-center" method="post" action="" style="width: 400px; margin: 0 auto;">
		{% if error %}
			<div class="text-error bottom-spaced-minor">{{ error }}</div>
		{% endif %}

		<fieldset>
			<div class="control-group">
				<label class="control-label">{{ "user.username"|trans }}</label>
				<div class="controls">
					<input type="text" class="input-large" name="username" id="username" value="{{ username }}" />
				</div>
			</div>

			<div class="control-group last">
				<label class="control-label">{{ "user.password"|trans }}</label>
				<div class="controls">
					<input type="password" class="input-large" name="password" id="password" />
				</div>
			</div>

			<div class="top-spaced-minor"></div>

			<button type="submit" class="btn btn-primary">
				{{ "user.log_in"|trans }}
			</button>
		</fieldset>
	</form>

	{% if app['user.browser_id.enabled'] %}
		<style type="text/css">{% include "DevtureUserBundle/browser_id/persona-buttons.css.twig" %}</style>

		<div class="text-center top-spaced-major">
			<hr style="width: 60%; margin: 0 auto;" />

			<div class="top-spaced-major" id="js-browser-id-login-trigger">
				<span class="muted">{{ "user.browser_id.or"|trans }}</span>
				<a href="javascript://" class="persona-button dark">
					<span>{{ "user.browser_id.log_in_with_your_email_address"|trans }}</span>
				</a>
			</div>

			<div class="top-spaced-major hide" id="js-browser-id-working">
				{{ "user.browser_id.logging_you_in"|trans }}
			</div>
		</div>
	{% endif %}
{% endblock %}

{% block js %}
	{{ parent() }}

	$('#username').focus();

	{% if app['user.browser_id.enabled'] %}
	comploader.load("browserid", function () {
		navigator.id.watch({
			"loggedInUser": {{ (app.user ? app.user.username : none)|json_encode|raw }},
			"onlogin": function (assertion) {
				$('#js-browser-id-working').show();

				$.ajax({
					"type": "POST",
					"dataType": "json",
					"url": {{ path_localized('user.browser_id.login')|json_encode|raw }},
					"data": {"assertion": assertion},
					"success": function (response, status, xhr) {
						if (response.ok) {
							window.location.reload();
						} else {
							$('#js-browser-id-working').hide();
							alert({{ "user.browser_id.unknown_email_or_other_login_failure"|trans|json_encode|raw }});
							navigator.id.logout();
						}
						window.location.reload();
					},
					"error": function (xhr, status, err) {
						$('#js-browser-id-working').hide();
						navigator.id.logout();
					}
				});
			},
			"onlogout": function () {
				navigator.id.logout();
			}
		});

		$('#js-browser-id-login-trigger').click(function () {
			navigator.id.request();
		});
	});
	{% endif %}
{% endblock %}
